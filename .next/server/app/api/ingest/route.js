"use strict";(()=>{var e={};e.id=662,e.ids=[662],e.modules={1708:e=>{e.exports=require("node:process")},3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4573:e=>{e.exports=require("node:buffer")},9330:(e,t,r)=>{r.r(t),r.d(t,{patchFetch:()=>q,routeModule:()=>x,serverHooks:()=>_,workAsyncStorage:()=>N,workUnitAsyncStorage:()=>b});var s={};r.r(s),r.d(s,{POST:()=>S});var a=r(96559),o=r(48088),i=r(37719),n=r(32190),c=r(35426),u=r(70809),p=r(61690),l=r(11572),d=r(6075),m=r(70132);async function g({userId:e,title:t,description:r,type:s,status:a="PENDING",metadata:o={},waitingFor:i=null,waitingSince:n=null,resumeAfter:c=null,parentTaskId:u=null}){let p={...o,currentStep:o.currentStep||1,waitingFor:i,waitingSince:n,resumeAfter:c,parentTaskId:u};return m.z.task.create({data:{userId:e,title:t,description:r,type:s,status:a,metadata:p}})}function E(e){return JSON.parse(JSON.stringify(e))}function h(e){return!0===e.success&&"number"==typeof e.count}async function w(e){try{console.log(`Starting data ingestion for user ${e}`);let t=await g({userId:e,title:"Data Ingestion",description:"Importing emails, calendar events, and contacts for RAG",type:"GENERAL",status:"IN_PROGRESS",metadata:{progress:0,total:3,errors:[],steps:[{stepNumber:1,title:"Email Import",description:"Importing emails for RAG",status:"PENDING"},{stepNumber:2,title:"Calendar Import",description:"Importing calendar events for RAG",status:"PENDING"},{stepNumber:3,title:"Contact Import",description:"Importing HubSpot contacts for RAG",status:"PENDING"}]}}),[r,s,a]=await Promise.all([(0,p.x4)(e).catch(e=>(console.error("Error importing emails:",e),{success:!1,error:"Failed to import emails"})),(0,l.P2)(e).catch(e=>(console.error("Error importing calendar events:",e),{success:!1,error:"Failed to import calendar events"})),(0,d.UO)(e).catch(e=>(console.error("Error importing HubSpot contacts:",e),{success:!1,error:"Failed to import HubSpot contacts"}))]);await m.z.task.update({where:{id:t.id},data:{status:"COMPLETED",metadata:{progress:100,total:3,errors:[...!r.success&&r.error?[r.error]:[],...!s.success&&s.error?[s.error]:[],...!a.success&&a.error?[a.error]:[]]}}});let o=(h(r)?r.count:0)+(h(s)?s.count:0)+(h(a)?a.count:0);if(r.success&&s.success&&a.success)return{success:!0,taskId:t.id,count:o};return{success:!1,taskId:t.id,error:"Failed to complete data ingestion"}}catch(e){return console.error("Error during data ingestion:",e),{success:!1,error:"Failed to complete data ingestion"}}}async function f(e){try{console.log(`Starting email ingestion for user ${e}`);let t=await g({userId:e,title:"Email Ingestion",description:"Importing emails for RAG",type:"GENERAL",status:"IN_PROGRESS",metadata:{progress:0,total:1,errors:[],warnings:[],stats:{totalEmails:0,processedEmails:0,failedEmails:0,skippedEmails:0},steps:[{stepNumber:1,title:"Email Import",description:"Importing emails for RAG",status:"PENDING"}]}}),r=t.metadata,s=r.steps||[];s.length>0&&(s[0].status="IN_PROGRESS",await m.z.task.update({where:{id:t.id},data:{metadata:E({...r,steps:s,stats:{totalEmails:0,processedEmails:0,failedEmails:0,skippedEmails:0}})}}));try{let r=await (0,p.x4)(e,{onProgress:async e=>{let r=await m.z.task.findUnique({where:{id:t.id}});if(!r||!r.metadata)return;let s=r.metadata,a=s.steps||[];0!==a.length&&(a[0].status="IN_PROGRESS",a[0].metadata={...a[0].metadata,progress:e.percentage,stats:{totalEmails:e.total,processedEmails:e.processed,failedEmails:e.failed,skippedEmails:e.skipped},errors:e.errors||[],warnings:e.warnings||[],lastUpdate:new Date().toISOString()},await m.z.task.update({where:{id:t.id},data:{metadata:JSON.parse(JSON.stringify({...s,steps:a,progress:e.percentage,stats:{totalEmails:e.total,processedEmails:e.processed,failedEmails:e.failed,skippedEmails:e.skipped},errors:e.errors||[],warnings:e.warnings||[],lastUpdate:new Date().toISOString()}))}}))}}),s=await m.z.task.findUnique({where:{id:t.id}});if(s&&s.metadata){let e=s.metadata,a=e.steps||[];a.length>0&&(a[0].status=r.success?"COMPLETED":"FAILED",a[0].metadata={...a[0].metadata,stats:r.stats,errors:r.errors||[],warnings:r.warnings||[]},await m.z.task.update({where:{id:t.id},data:{metadata:E({...e,steps:a})}}))}if(await m.z.task.update({where:{id:t.id},data:{status:r.success?"COMPLETED":"FAILED",metadata:{progress:100*!!r.success,stats:r.stats,errors:r.errors||[],warnings:r.warnings||[]}}}),r.success)return{success:!0,taskId:t.id,count:r.count||0,stats:r.stats,errors:r.errors,warnings:r.warnings};return{success:!1,taskId:t.id,error:r.error||"Unknown error",stats:r.stats,errors:r.errors,warnings:r.warnings}}catch(o){let e=o instanceof Error?o.message:"Failed to import emails",r=t.metadata||{},s=r.steps||[],a={...r,progress:0,errors:[e],warnings:[],stats:{totalEmails:0,processedEmails:0,failedEmails:0,skippedEmails:0}};return s.length>0&&(s[0]={...s[0],status:"FAILED",metadata:{...s[0].metadata||{},completedAt:new Date().toISOString(),errors:[e]}},a.steps=s),await m.z.task.update({where:{id:t.id},data:{status:"FAILED",metadata:E(a)}}),{success:!1,taskId:t.id,error:e,stats:{totalEmails:0,processedEmails:0,failedEmails:0,skippedEmails:0},errors:[e],warnings:[]}}}catch(e){return console.error("Error creating email ingestion task:",e),{success:!1,error:e instanceof Error?e.message:"Failed to create email ingestion task",stats:{totalEmails:0,processedEmails:0,failedEmails:0,skippedEmails:0},errors:[],warnings:[]}}}async function I(e){try{console.log(`Starting calendar event ingestion for user ${e}`);let t=await g({userId:e,title:"Calendar Ingestion",description:"Importing calendar events for RAG",type:"CALENDAR",status:"IN_PROGRESS",metadata:{progress:0,total:1,errors:[],steps:[{stepNumber:1,title:"Calendar Import",description:"Importing calendar events for RAG",status:"PENDING"}]}}),r=t.metadata,s=r.steps||[];s.length>0&&(s[0].status="IN_PROGRESS",await m.z.task.update({where:{id:t.id},data:{metadata:E({...r,steps:s})}}));let a=await (0,l.P2)(e),o={...r,progress:100*!!a.success,total:100,errors:!a.success&&a.error?[a.error]:[]};if(s.length>0&&(s[0].status=a.success?"COMPLETED":"FAILED",o.steps=s),await m.z.task.update({where:{id:t.id},data:{status:a.success?"COMPLETED":"FAILED",metadata:E(o)}}),h(a))return{success:!0,taskId:t.id,count:a.count};return{success:!1,taskId:t.id,error:a.error||"Unknown error"}}catch(e){return console.error("Error during calendar event ingestion:",e),{success:!1,error:"Failed to complete calendar event ingestion"}}}async function k(e){try{console.log(`Starting HubSpot contact ingestion for user ${e}`);let t=await g({userId:e,title:"HubSpot Contact Ingestion",description:"Importing HubSpot contacts for RAG",type:"HUBSPOT",status:"IN_PROGRESS",metadata:{progress:0,total:1,errors:[],steps:[{stepNumber:1,title:"Contact Import",description:"Importing HubSpot contacts for RAG",status:"PENDING"}]}}),r=t.metadata,s=r.steps||[];s.length>0&&(s[0].status="IN_PROGRESS",await m.z.task.update({where:{id:t.id},data:{metadata:E({...r,steps:s})}}));let a=await (0,d.UO)(e),o={...r,progress:100*!!a.success,total:100,errors:!a.success&&a.error?[a.error]:[]};if(s.length>0&&(s[0].status=a.success?"COMPLETED":"FAILED",o.steps=s),await m.z.task.update({where:{id:t.id},data:{status:a.success?"COMPLETED":"FAILED",metadata:E(o)}}),h(a))return{success:!0,taskId:t.id,count:a.count};return{success:!1,taskId:t.id,error:a.error||"Unknown error"}}catch(e){return console.error("Error during HubSpot contact ingestion:",e),{success:!1,error:"Failed to complete HubSpot contact ingestion"}}}async function S(e){try{let t,r=await (0,c.getServerSession)(u.N);if(!r||!r.user)return n.NextResponse.json({error:"Unauthorized"},{status:401});let s=r.user.id,{type:a}=await e.json();switch(a){case"all":t=await w(s);break;case"emails":t=await f(s);break;case"calendar":t=await I(s);break;case"contacts":t=await k(s);break;default:return n.NextResponse.json({error:"Invalid ingestion type"},{status:400})}return n.NextResponse.json(t)}catch(e){return console.error("Error during data ingestion:",e),n.NextResponse.json({error:"Failed to process ingestion request"},{status:500})}}let x=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/ingest/route",pathname:"/api/ingest",filename:"route",bundlePath:"app/api/ingest/route"},resolvedPagePath:"C:\\Users\\Joseph\\Documents\\Jump\\jump-advisor\\src\\app\\api\\ingest\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:N,workUnitAsyncStorage:b,serverHooks:_}=x;function q(){return(0,i.patchFetch)({workAsyncStorage:N,workUnitAsyncStorage:b})}},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11723:e=>{e.exports=require("querystring")},12412:e=>{e.exports=require("assert")},16141:e=>{e.exports=require("node:zlib")},19771:e=>{e.exports=require("process")},21820:e=>{e.exports=require("os")},27910:e=>{e.exports=require("stream")},28354:e=>{e.exports=require("util")},29021:e=>{e.exports=require("fs")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},34631:e=>{e.exports=require("tls")},37067:e=>{e.exports=require("node:http")},37830:e=>{e.exports=require("node:stream/web")},44708:e=>{e.exports=require("node:https")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{e.exports=require("crypto")},55591:e=>{e.exports=require("https")},57075:e=>{e.exports=require("node:stream")},57975:e=>{e.exports=require("node:util")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},70809:(e,t,r)=>{r.d(t,{N:()=>n});var s=r(16467),a=r(70132),o=r(36344);function i(e){let t=process.env[e];if(!t)throw Error(`Missing required env var: ${e}`);return t}console.log("NEXTAUTH_URL:",process.env.NEXTAUTH_URL),console.log("GOOGLE_CLIENT_ID:",process.env.GOOGLE_CLIENT_ID?"[Set]":"[Not Set]"),console.log("GOOGLE_CLIENT_SECRET:",process.env.GOOGLE_CLIENT_SECRET?"[Set]":"[Not Set]");let n={adapter:(0,s.y)(a.z),providers:[(0,o.A)({clientId:i("GOOGLE_CLIENT_ID"),clientSecret:i("GOOGLE_CLIENT_SECRET"),allowDangerousEmailAccountLinking:!0,authorization:{params:{scope:"openid email profile https://www.googleapis.com/auth/gmail.readonly https://www.googleapis.com/auth/calendar.readonly",prompt:"consent",access_type:"offline"}}}),function(e){return{id:"hubspot",name:"HubSpot",type:"oauth",allowDangerousEmailAccountLinking:!0,authorization:{url:"https://app.hubspot.com/oauth/authorize",params:{client_id:e.clientId,scope:"crm.schemas.contacts.read oauth",redirect_uri:e.callbackUrl}},token:{url:"https://api.hubapi.com/oauth/v1/token",async request({params:t,provider:r}){let s=await fetch(r.token?.url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"authorization_code",client_id:e.clientId,client_secret:e.clientSecret,redirect_uri:e.callbackUrl,code:t.code})});return{tokens:await s.json()}}},userinfo:{url:"https://api.hubapi.com/oauth/v1/access-tokens/",async request({tokens:e}){return(await fetch(`${this.url}/${e.access_token}`,{headers:{Authorization:`Bearer ${e.access_token}`}})).json()}},profile(e){if(console.log("HubSpot profile data:",JSON.stringify(e,null,2)),!e.email)throw Error("HubSpot profile is missing email field");return{id:e.user_id||e.id||"hubspot-user",email:e.email,name:e.name||`${e.firstName||""} ${e.lastName||""}`.trim()||e.email.split("@")[0],image:null}}}}({clientId:i("HUBSPOT_CLIENT_ID"),clientSecret:i("HUBSPOT_CLIENT_SECRET"),callbackUrl:process.env.NEXTAUTH_URL?`${process.env.NEXTAUTH_URL}/api/auth/callback/hubspot`:"http://localhost:3000/api/auth/callback/hubspot"})],callbacks:{session:async({session:e,token:t})=>(e.user&&t.sub&&(e.user.id=t.sub),e),signIn:async({account:e})=>(e&&"google"===e.provider&&e.refresh_token_expires_in&&delete e.refresh_token_expires_in,!0),redirect:async({url:e,baseUrl:t})=>e.startsWith(t)?e.includes("callbackUrl")?e:`${t}/dashboard`:e.startsWith("/")?`${t}/dashboard`:t},pages:{signIn:"/login",error:"/login"},session:{strategy:"jwt"}}},73024:e=>{e.exports=require("node:fs")},73136:e=>{e.exports=require("node:url")},73496:e=>{e.exports=require("http2")},73566:e=>{e.exports=require("worker_threads")},74075:e=>{e.exports=require("zlib")},76760:e=>{e.exports=require("node:path")},77030:e=>{e.exports=require("node:net")},79428:e=>{e.exports=require("buffer")},79551:e=>{e.exports=require("url")},79646:e=>{e.exports=require("child_process")},81630:e=>{e.exports=require("http")},83997:e=>{e.exports=require("tty")},91645:e=>{e.exports=require("net")},94735:e=>{e.exports=require("events")},96330:e=>{e.exports=require("@prisma/client")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[243,580,973,582,957],()=>r(9330));module.exports=s})();