"use strict";(()=>{var e={};e.id=480,e.ids=[480],e.modules={1708:e=>{e.exports=require("node:process")},3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4573:e=>{e.exports=require("node:buffer")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11723:e=>{e.exports=require("querystring")},12412:e=>{e.exports=require("assert")},16141:e=>{e.exports=require("node:zlib")},19771:e=>{e.exports=require("process")},21820:e=>{e.exports=require("os")},27910:e=>{e.exports=require("stream")},28354:e=>{e.exports=require("util")},29021:e=>{e.exports=require("fs")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},34631:e=>{e.exports=require("tls")},37067:e=>{e.exports=require("node:http")},37830:e=>{e.exports=require("node:stream/web")},44708:e=>{e.exports=require("node:https")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{e.exports=require("crypto")},55591:e=>{e.exports=require("https")},57075:e=>{e.exports=require("node:stream")},57975:e=>{e.exports=require("node:util")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73024:e=>{e.exports=require("node:fs")},73136:e=>{e.exports=require("node:url")},73496:e=>{e.exports=require("http2")},73566:e=>{e.exports=require("worker_threads")},74075:e=>{e.exports=require("zlib")},75992:(e,t,r)=>{r.d(t,{l:()=>a});var o=r(70132),s=r(6075),i=r(98504),n=r(94112);async function a(e,t){try{if(console.log(`Processing HubSpot event for user ${e}`,t),!await o.z.account.findFirst({where:{userId:e,provider:"hubspot"}}))throw Error(`No HubSpot account found for user ${e}`);let r=await (0,s.pC)(e),i=t.subscriptionType;switch(i){case"contact.creation":case"contact.propertyChange":await p(e,r,t);break;case"note.creation":await u(e,r,t);break;case"deal.creation":case"deal.propertyChange":await c(e,r,t);break;default:console.log(`Unhandled HubSpot event type: ${i}`)}await d(e,t)}catch(e){throw console.error("Error processing HubSpot event:",e),e}}async function p(e,t,r){try{let s=r.objectId,n=(await t.crm.contacts.basicApi.getById(s,["email","firstname","lastname","phone","company","website","address","city","state","zip"])).body,a=n.properties.email,p=n.properties.firstname,u=n.properties.lastname,c=`${p} ${u} ${a} ${JSON.stringify(n.properties)}`,d=await (0,i.Lu)(c),l=await o.z.hubspotContact.findFirst({where:{userId:e,hubspotId:String(s)}});if(l)await o.z.hubspotContact.update({where:{id:l.id},data:{email:a,firstName:p,lastName:u,properties:n.properties,embedding:d}}),console.log(`Updated HubSpot contact: ${l.id}`);else{let t=await o.z.hubspotContact.create({data:{userId:e,hubspotId:String(s),email:a,firstName:p,lastName:u,properties:n.properties,embedding:d}});console.log(`Created HubSpot contact: ${t.id}`)}}catch(e){throw console.error("Error processing HubSpot contact event:",e),e}}async function u(e,t,r){try{let e=r.objectId,s=(await t.crm.objects.notes.basicApi.getById(e)).body,n=await t.crm.objects.notes.associationsApi.getAll(e,"contact");if(!n.body.results||0===n.body.results.length)return void console.log(`Note ${e} has no associated contact`);let a=n.body.results[0].id,p=s.properties.hs_note_body||"",u=await (0,i.Lu)(p),c=await o.z.hubspotNote.findUnique({where:{hubspotId:String(e)}});if(c)await o.z.hubspotNote.update({where:{id:c.id},data:{content:p,embedding:u}}),console.log(`Updated HubSpot note: ${c.id}`);else{let t=await o.z.hubspotNote.create({data:{hubspotId:String(e),contactId:String(a),content:p,createdAt:new Date(s.properties.hs_createdate||Date.now()),embedding:u}});console.log(`Created HubSpot note: ${t.id}`)}}catch(e){throw console.error("Error processing HubSpot note event:",e),e}}async function c(e,t,r){try{let e=r.objectId,o=(await t.crm.deals.basicApi.getById(e)).body;console.log(`Received deal update: ${e}`,o.properties)}catch(e){throw console.error("Error processing HubSpot deal event:",e),e}}async function d(e,t){let r=(await o.z.instruction.findMany({where:{userId:e,active:!0}})).filter(e=>e.instruction.toLowerCase().includes("hubspot"));if(0!==r.length)for(let s of r)try{let r=`
        I have a HubSpot event:
        Type: ${t.subscriptionType}
        Object ID: ${t.objectId}
        Event ID: ${t.eventId}
        
        I have the following instruction: "${s.instruction}"
        
        Should I take any action based on this HubSpot event and instruction? If yes, what action should I take?
      `,i=await (0,n.E)(e,r,[]);i.toLowerCase().includes("yes")&&!i.toLowerCase().includes("no action")&&await o.z.task.create({data:{userId:e,title:`Process HubSpot event: ${t.subscriptionType}`,description:i,type:"HUBSPOT",status:"PENDING",metadata:{objectId:t.objectId,eventType:t.subscriptionType,instructionId:s.id}}})}catch(e){console.error("Error processing instruction for HubSpot event:",e)}}},76760:e=>{e.exports=require("node:path")},77030:e=>{e.exports=require("node:net")},79428:e=>{e.exports=require("buffer")},79551:e=>{e.exports=require("url")},79646:e=>{e.exports=require("child_process")},79981:(e,t,r)=>{r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>b,serverHooks:()=>w,workAsyncStorage:()=>h,workUnitAsyncStorage:()=>x});var o={};r.r(o),r.d(o,{POST:()=>l});var s=r(96559),i=r(48088),n=r(37719),a=r(32190),p=r(70132),u=r(75992),c=r(55511),d=r.n(c);async function l(e){try{let t=await e.text(),r=JSON.parse(t),o=Object.fromEntries(e.headers),s=o["x-hubspot-signature"];if(!function(e,t,r){if(!e||!t)return!1;let o=d().createHmac("sha256",t);o.update(r);let s=o.digest("hex");return d().timingSafeEqual(Buffer.from(s),Buffer.from(e))}(s,process.env.HUBSPOT_CLIENT_SECRET,t))return console.error("Invalid HubSpot webhook signature"),a.NextResponse.json({error:"Invalid signature"},{status:401});let i=o["x-hubspot-subscription-id"];if(!i)return console.error("Missing subscription ID in HubSpot webhook"),a.NextResponse.json({error:"Missing subscription ID"},{status:400});let n=await p.z.webhookSubscription.findFirst({where:{externalId:i,service:"HUBSPOT"},include:{user:!0}});if(!n?.user)return console.error(`No user found for HubSpot subscription: ${i}`),a.NextResponse.json({error:"User not found"},{status:404});for(let e of Array.isArray(r)?r:[r])(0,u.l)(n.user.id,e).catch(e=>console.error("Error processing HubSpot event:",e));return a.NextResponse.json({success:!0})}catch(e){return console.error("Error handling HubSpot webhook:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}let b=new s.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/webhooks/hubspot/route",pathname:"/api/webhooks/hubspot",filename:"route",bundlePath:"app/api/webhooks/hubspot/route"},resolvedPagePath:"C:\\Users\\Joseph\\Documents\\Jump\\jump-advisor\\src\\app\\api\\webhooks\\hubspot\\route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:h,workUnitAsyncStorage:x,serverHooks:w}=b;function f(){return(0,n.patchFetch)({workAsyncStorage:h,workUnitAsyncStorage:x})}},81630:e=>{e.exports=require("http")},83997:e=>{e.exports=require("tty")},91645:e=>{e.exports=require("net")},94735:e=>{e.exports=require("events")},96330:e=>{e.exports=require("@prisma/client")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[243,580,582,957,112],()=>r(79981));module.exports=o})();